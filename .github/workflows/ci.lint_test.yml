---
name: "Continuous Integration: Linting/Go Tests"

on:
  push:
    branches:
      - "**"
      - "!master"

jobs:
  Lint:
    name: "CI: Linting"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_GO: true
          FILTER_REGEX_EXCLUDE: ".*test/.*"

  go-versions:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: arnested/go-version-action@v1
        id: versions

  Test:
    name: "CI: Go Tests"
    needs: go-versions
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        version: ${{ fromJSON(needs.go-versions.outputs.latest) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.version }}
          check-latest: true
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: |
          go mod tidy
          go test ./...
